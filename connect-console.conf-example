#XXX Copy this file to connect_console.conf and fill in the fields

#XXX On the moment not used: the Connect code is merged into the website
#XXX until it needs to get separate daemons.

{
	# This instance name must be unique within the network.  It is used
	# as prefix in userid's
	instance => 'co001',

	# Overrule the automatic detection of the virtual-host of the website
	vhost    => 'https://connect.open-console.eu',

	#### Sessions

	sessions => {
	},

	# Secrets are used to encrypt cookies.  Multiple secrets can be active
	# at the same time, for seemless changes.
	# You may decide you use https://metacpan.org/pod/Mojolicious::Command::secret
	# to bake your cookie secrets.

    #       XXXvvvv replace this one, with any hex string vvvXXX
	secrets  => [ '9ed5714761d3c28ee83f2fb20d2991a3fe282b93' ],

	#### Databases
	#    various components are coded as if their data is location in different
	#    database instances.  This may be the case once Open Console grows huge.
	#    When the databases use the same server URL, then they will share the
	#    connections.

	# Critical data, so need redundancy.  Optimized to have few writes.
	# Where is the user's database? Contains users, identities, and groups.
	userdb  => {
		server => 'mongodb://localhost:27017',  # this is the default for mongodb
		dbname => 'users',
	},

	# Medium critical data, mild in performance requirements.
	proofdb  => {
		server => 'mongodb://localhost:27017',
		dbname => 'proofs',
	},

	# Low cricital data, but many writes: outgoing emails, presented tokens.
	# Often the table data is processed by Minion tasks.
	connectdb => {
		server => 'mongodb://localhost:27017',
		dbname => 'connect',
	},
}
